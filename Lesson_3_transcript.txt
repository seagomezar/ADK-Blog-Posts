0:02
In this
0:03
lesson, you learn how to get back a structured response from a region
0:07
using a defined schema and see the results as an external file.
0:11
We also see how we can change the behavior of a main agent as a coordinator
0:15
rather than a newsreader. All right. Let's go.
0:18
In our last lesson, we built a fantastic interactive news assistant.
0:22
It could hold a conversation, fetch news and financial data in real time,
0:26
and discuss the headlines with us.
0:28
But now we're going to evolve that concept into much more powerful pattern,
0:32
which is called as the coordinator dispatcher model.
0:35
Think about it for real world tasks like preparing the search for a podcast.
0:39
You don't want to sit and listen to any and read out every single
0:42
headline it finds.
0:43
That's inefficient.
0:44
Instead, you want to act like a director.
0:47
You give a command and your research assistant goes off,
0:49
does the work quietly in the background, and then comes back to you.
0:53
Only when it's complete formatted report is ready.
0:56
That's exactly what we are building in this lesson.
0:58
are transforming our agent
1:00
from the conversationalist into a silent, efficient background researcher.
1:04
It will take our request coordinated tool to perform the research
1:07
and dispatch the final output to a file, only updating us on its progress.
1:12
To achieve. This will be making three key changes.
1:15
First, we are adding a new tool to its toolkit.
1:17
Second, we are fundamentally rewriting the instruction for a root
1:20
agent to change its behavior.
1:22
and third, the way we interact with it will be much simpler
1:25
focused on initiating the task and receiving the final product.
1:29
As with the previous lessons, the initial setup is the same.
1:32
We first ensure
1:32
the latest version of VDC is installed and all the other dependencies
1:36
are also there.
1:37
Then we create the folder and boilerplate files for our agent.
1:40
Using a k create.
1:42
Since we have done this few times, let's jump straight to the code changes.
1:46
Next let's start with the tools.
1:48
Just as in lesson three are agents still has the get financial context function.
1:52
Jobs remains the same.
1:54
To take a list of stock tickers and return the current price and daily
1:58
percentage change.
1:59
We do not need to change anything. There.
2:01
Now, the new addition to our agent dot profile is a function called
2:04
as save news to markdown.
2:06
This is another custom function to it's job is very straightforward.
2:10
It takes two arguments file name and content to be saved.
2:14
Inside the function, it simply writes the content into a markdown file.
2:18
The tool is the final step in our agent workflow, allowing it to save its complete
2:22
research to an external file, which we named as a research report.md.
2:27
Now, for the most important part, the new instructions of a root agent.
2:32
This is where we define its new personality as a background
2:35
AI research coordinator.
2:37
The instructions are now incredibly specific to enforce its new behavior.
2:42
First, we have implemented a strict two message interaction workflow.
2:45
When you make a request like find me the latest news,
2:49
the agent's only immediate response will be an acknowledgment
2:53
like, okay, I'll start researching the latest news.
2:57
This might take a moment.
2:59
After sending that message, the agent goes silent.
3:02
This is the background processing phase.
3:03
It is now executing a precise sequence of dual calls.
3:07
What we defined in its instruction in.
3:09
First, use Google search to find five articles.
3:12
Then it will internally extract the stock tickers from those articles.
3:16
Next it will pass those tickers to our Get financial tool.
3:20
To ensure the output is perfect, every time we have embedded
3:23
a required report schema directly into the agent's instruction.
3:27
This is one of the most powerful feature of using large language model like Gemini
3:31
with the SDK, by providing a clear markdown template in the prompt.
3:35
We're giving the model a precise blueprint to follow.
3:38
It understands the structure and will meticulously
3:40
format the research to match it exactly.
3:43
It is worth noting for more complex data structures, the SDK
3:47
allows you to define a pedantic schema and pass it as an output schema.
3:51
We'll explore that more advanced pattern when we get to multi-agent systems.
3:55
but for our current needs, defining the schema directly in the prompt
3:58
is a highly effective and simple way to guarantee a consistent output.
4:03
Finally it calls are saved.
4:05
News to markdown tool passing in the file name
4:08
a research report.md and the formatted content.
4:11
Only when the file is successfully saved.
4:13
Does the agent speak for the second and final time.
4:16
It will deliver its confirmation message.
4:18
Like all done, I've compiled the research report and saved it to a researcher.
4:22
Performed.
4:24
This entire complex research process happens autonomously in the background.
4:28
Between that first acknowledgment and the final confirmation.
4:32
Now let's run it.
4:33
You already know the drill. We will start the terminal.
4:36
Navigate to our directory and run the web command to start the server.
4:40
Once you open the web UI, I just give it a simple command.
4:43
Get me the latest news about artificial intelligence.
4:46
Okay, I'll start researching the latest AI news.
4:49
I will enrich the findings with financial data and compile a report for you.
4:54
This might take a moment. All done.
4:56
I've compiled the research report
4:57
with the latest financial context and saved it to AI.
5:00
Underscore research. Underscore report deemed.
5:03
All right, now let us look at the output.
5:05
Remember, we said that this is a background agent,
5:08
which means it took our instructions or requirements,
5:11
and then it did the work in the back end and then save the file.
5:15
Now let's look at the file that it has saved and see what
5:18
exactly do we have and what it has done as the background processing.
5:21
Wonderful.
5:22
As you can see here, the report starts with a clear title,
5:25
which is a industry news report followed by a top headline.
5:29
Each of the five news item is neatly formatted with the headline
5:33
itself, followed by a bullet point detailing the company and its stock ticker
5:38
and the market data showing the current stock price and percentage change.
5:41
And finally, it also shows you the brief summary of the article.
5:45
Now this is consistent,
5:46
predictable output is the direct result of providing that clear schema
5:50
in our agents instruction, demonstrating how you can actually guide the model
5:54
to produce exactly the structured data you need for your downstream task.